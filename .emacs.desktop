;; -*- mode: emacs-lisp; lexical-binding:t; coding: utf-8-emacs; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Thu Jan 18 10:08:35 2024
;; Desktop file format version 208
;; Emacs version 29.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (26025 16115 882435 0) (desktop . "208") "rplace@salami.local" nil nil ((((minibuffer . t) (fontsize . 0) (font . "-*-Menlo-regular-normal-normal-*-12-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 2) (child-frame-border-width) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars . right) (horizontal-scroll-bars) (foreground-color . "#f8f8f2") (background-color . "#282a36") (line-spacing) (left-fringe . 8) (right-fringe . 8) (no-special-glyphs) (undecorated) (ns-appearance) (ns-transparent-titlebar) (z-group) (no-focus-on-map) (no-accept-focus) (menu-bar-lines . 1) (tab-bar-lines . 0) (tool-bar-lines . 0) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 15) (scroll-bar-height . 15) (alpha) (alpha-background) (fullscreen . fullboth) (scroll-bar-foreground) (scroll-bar-background) (display-type . color) (background-mode . dark) (cursor-color . "#ccccc7") (font-parameter) (environment) (frameset--id . "9E34-12EB-9CEB-54BA") (frameset--mini t . t) (modeline . t) (unsplittable) (icon-name) (visibility . t) (display . "salami.local") (explicit-name) (tool-bar-position . top) (last-focus-update) (height . 80) (width . 252) (left . 175) (top . 88)) ((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 14) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 56) (min-pixel-width . 140) (min-pixel-height-ignore . 42) (min-pixel-width-ignore . 98) (min-pixel-height-safe . 14) (min-pixel-width-safe . 28)) hc (pixel-width . 1795) (pixel-height . 1106) (total-width . 256) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 896) (pixel-height . 1106) (total-width . 128) (total-height . 79) (normal-height . 1.0) (normal-width . 0.4990451941438574) (buffer "init.org" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 3 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 4879) (start . 3964)) (prev-buffers ("*Python Doc*" 1 1) ("init.org" 3964 4879) ("foo.py" 1 596))) (leaf (last . t) (pixel-width . 899) (pixel-height . 1106) (total-width . 128) (total-height . 79) (normal-height . 1.0) (normal-width . 0.5009548058561426) (buffer "foo.py" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 3 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 52) (start . 1)) (prev-buffers ("foo.py" 1 596)))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '(#("elp" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("elpy" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("compan" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("jedi" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("company" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("python-mode" 0 11 (isearch-case-fold-search t isearch-regexp-function nil)) #("org-" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("python" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("python-modepytho" 0 16 (isearch-case-fold-search t isearch-regexp-function nil)) #("company-jedu" 0 12 (isearch-case-fold-search t isearch-regexp-function nil)) #("company-jedi" 0 12 (isearch-case-fold-search t isearch-regexp-function nil)) #("company-je	" 0 11 (isearch-case-fold-search t isearch-regexp-function nil)) #("company-jed" 0 11 (isearch-case-fold-search t isearch-regexp-function nil)) #("fla" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("flake" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("hook" 0 4 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq regexp-search-ring nil)
(setq register-alist (list (list 313465889 "Unprintable entity" (let ((mk (make-marker))) (add-hook 'desktop-delay-hook (lambda nil (set-marker mk 30 (get-buffer "bar.py")))) mk))))
(setq file-name-history '("~/.emacs.d/init.el" "~/src/python/foo.py" "~/.emacs.d/init.el" "~/src/python/foo.py" "~/.emacs.d/init.el" "~/src/python/basz.py" "~/src/python/bar.py" "~/src/python/foo.py" "~/.emacs.d/init.el" "~/src/python/foo.py" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/src/python/foo.py" "~/.emacs.d/init.el" "~/.emacs.d/init.org" "~/.emacs.d/init.el" "~/.zshrc" "~/.emacs.d/init.el" "~/.emacs.d/init.org" "~/.zshrc" "~/.emacs.d/init.org" "~/.emacs.d/init.el" "~/src/python/foo.py" "~/.emacs.d/init.el" "~/src/c/foo.c" "~/.emacs.d/init.el" "~/src/python/netstat.py" "~/.emacs.d/init.el" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/src/python/gol.py" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/.emacs.d/init.org" "~/.emacs.d/snippets/snippet-mode/org-mode/table" "~/.emacs.d/snippets/snippet-mode/org-mode/title" "~/iCloudDrive/Notes/ms/open_telemetry.org" "~/src/haskell/drop.hs" "~/iCloudDrive/Notes/fiserv/ad-cleanup/fiserv.db.project.org" "~/.emacs.d/.git/EDIT_DESCRIPTION" "~/.emacs.d/init.el" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/iCloudDrive/Notes/fiserv/ad-cleanup/fiserv.db.project.org" "~/.emacs.d/init.org" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/iCloudDrive/Notes/fiserv/ad-cleanup/fiserv.db.project.org" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/iCloudDrive/Notes/emacs.org" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/iCloudDrive/Notes/fiserv/ad-cleanup/fiserv.db.project.org" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/.emacs.d/init.el.bak" "~/.emacs.d/init.el" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/" "~/.emacs.d/init.el" "~/.emacs.d/"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/Users/rplace/.emacs.d/init.org"
  "init.org"
  'org-mode
  '(company-mode corfu-mode yas-minor-mode flyspell-mode visual-line-mode org-bullets-mode font-lock-mode org-indent-mode auto-revert-mode)
  4879
  '(1993 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-display-time 26025 16085 812101 0) (buffer-file-coding-system . utf-8-unix) (truncate-lines))
  '((mark-ring (1931 3014 2603 4568 4212 4586 2615 2575 2777 4530 4552 2841 2841 2772 2251 2525))))

(desktop-create-buffer 208
  "/Users/rplace/src/python/foo.py"
  "foo.py"
  'python-mode
  '(company-mode font-lock-mode yas-minor-mode highlight-indentation-mode flymake-mode eldoc-mode elpy-mode flyspell-mode corfu-mode visual-line-mode)
  52
  '(388 nil)
  nil
  nil
  '((tab-width . 2) (indent-tabs-mode . t) (buffer-display-time 26025 16085 529547 0) (buffer-file-coding-system . undecided-unix) (truncate-lines))
  '((mark-ring (597 597 597 377 597))))

(desktop-create-buffer 208
  "/Users/rplace/src/python/bar.py"
  "bar.py"
  'python-mode
  '(company-mode outline-minor-mode flyspell-mode auto-complete-mode jedi-mode yas-minor-mode highlight-indentation-mode flymake-mode eldoc-mode elpy-mode font-lock-mode corfu-mode visual-line-mode)
  40
  '(nil nil)
  nil
  nil
  '((tab-width . 2) (indent-tabs-mode . t) (buffer-display-time 26025 16047 470781 0) (buffer-file-coding-system . utf-8-unix) (truncate-lines))
  '((mark-ring nil)))

